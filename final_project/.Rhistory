library(tidyverse)
setwd("/Users/lindsayhiser/Documents/Harris/4_FA22/Data and Programming - R II/final-project-lindsay-hiser")
access <- read_csv("data/cleaned/access.csv")
View(access)
view(
access %>%
select(place, perc_hholds_both)
)
library(httr) # get API
library(jsonlite) # GET API
library(httr) # get API
library(jsonlite) # GET API
#######
#setwd("/Users/lindsayhiser/Documents/Harris/4_FA22/Data and Programming - R II/final-project-lindsay-hiser")
res_dis <- GET('api.census.gov/data/2020/acs/acs5/subject?get=NAME,group(S2802_C02_001E)&for=counties:*&key=f7376443486af408306554a3976d5eca1a01f83e')
#######
#setwd("/Users/lindsayhiser/Documents/Harris/4_FA22/Data and Programming - R II/final-project-lindsay-hiser")
res <- GET('api.census.gov/data/2020/acs/acs5/subject?get=NAME,group(S2802_C02_001E)&for=counties:*&key=f7376443486af408306554a3976d5eca1a01f83e')
rawToChar(res$content)
#######
#setwd("/Users/lindsayhiser/Documents/Harris/4_FA22/Data and Programming - R II/final-project-lindsay-hiser")
res <- GET('api.census.gov/data/2020/acs/acs5/subject?get=NAME,group(S2802)&for=counties:*&key=f7376443486af408306554a3976d5eca1a01f83e')
rawToChar(res$content)
#######
#setwd("/Users/lindsayhiser/Documents/Harris/4_FA22/Data and Programming - R II/final-project-lindsay-hiser")
res <- GET('api.census.gov/data/2020/acs/acs5/subject?get=NAME,group(S2802)&for=county:*&key=f7376443486af408306554a3976d5eca1a01f83e')
rawToChar(res$content)
df <- as.data.frame(
fromJSON(rawToChar(res$content))
)
View(df)
colnames(df_dis) <- df_dis[1, ] # replace header with first row of labels
df_dis <- df_dis[-1, ] # remove redundant row of labels
df_dis <- df_dis[ ,-3] # remove redundant name col
colnames(df) <- df[1, ] # replace header with first row of labels
df <- df[-1, ] # remove redundant row of labels
df <- df[ ,-3] # remove redundant name col
vars <- tibble(
code = c('NAME', 'GEO_ID','S2802_C03_001E'),
var = c('name', 'geo_id','perc_households')
)
df <- df %>%
select(any_of(vars$code)) %>%
setNames(vars$var)
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5)
df <- as.data.frame(
fromJSON(rawToChar(res$content))
)
colnames(df) <- df[1, ] # replace header with first row of labels
df <- df[-1, ] # remove redundant row of labels
df <- df[ ,-3] # remove redundant name col
vars <- tibble(
code = c('NAME', 'GEO_ID','S2802_C03_001E'),
var = c('name', 'geo_id','share')
)
df <- df %>%
select(any_of(vars$code)) %>%
setNames(vars$var)
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
select(id, name, perc_households)
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
select(id, name, share)
#######
#setwd("/Users/lindsayhiser/Documents/Harris/4_FA22/Data and Programming - R II/final-project-lindsay-hiser")
res <- GET('api.census.gov/data/2020/acs/acs5/subject?get=NAME,group(S2802)&for=county:*&key=f7376443486af408306554a3976d5eca1a01f83e')
df <- as.data.frame(
fromJSON(rawToChar(res$content))
)
colnames(df) <- df[1, ] # replace header with first row of labels
df <- df[-1, ] # remove redundant row of labels
df <- df[ ,-3] # remove redundant name col
vars <- tibble(
code = c('NAME', 'GEO_ID','S2802_C03_001E'),
var = c('county', 'geo_id','share')
)
df <- df %>%
select(any_of(vars$code)) %>%
setNames(vars$var)
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
select(id, county, share)
df <- df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
select(id, county, share)
df
df <- df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
select(id, county, share) %>%
as.numeric(share)
df <- df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
mutate(id = as.numeric(id),
share = as.numeric(share)) %>%
select(id, county, share)
df <- df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5)
df <- as.data.frame(
fromJSON(rawToChar(res$content))
)
colnames(df) <- df[1, ] # replace header with first row of labels
df <- df[-1, ] # remove redundant row of labels
df <- df[ ,-3] # remove redundant name col
vars <- tibble(
code = c('NAME', 'GEO_ID','S2802_C03_001E'),
var = c('county', 'geo_id','share')
)
df <- df %>%
select(any_of(vars$code)) %>%
setNames(vars$var)
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
mutate(id = as.numeric(id),
share = as.numeric(share)) %>%
select(id, county, share)
df
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = 9)
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5)
df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
mutate(id = as.numeric(id),
share = as.numeric(share)) %>%
select(id, county, share)
df <- df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
mutate(id = as.numeric(id),
share = as.numeric(share)) %>%
select(id, county, share)
df <- as.data.frame(
fromJSON(rawToChar(res$content))
)
colnames(df) <- df[1, ] # replace header with first row of labels
df <- df[-1, ] # remove redundant row of labels
df <- df[ ,-3] # remove redundant name col
vars <- tibble(
code = c('NAME', 'GEO_ID','S2802_C03_001E'),
var = c('county', 'geo_id','share')
)
df <- df %>%
select(any_of(vars$code)) %>%
setNames(vars$var)
df <- df %>%
separate(geo_id, into = c("REMOVE", "id"), sep = -5) %>%
mutate(share = as.numeric(share)) %>%
select(id, county, share)
write_csv(df, "data/cleaned/access2020.csv")
#######
setwd("/Users/lindsayhiser/Documents/Harris/4_FA22/Data Visualization/CAPP30239_FA22/final_project")
"
write_csv(df, "data/cleaned/access2020.csv")
write_csv(df, "data/cleaned/access2020.csv")
